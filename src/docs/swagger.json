{
  "swagger": "2.0",
  "info": {
    "title": "Pizza Shop Backend API",
    "description": "API documentation for Shop app",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/users/registerUser": {
      "post": {
        "summary": "Create an account",
        "description": "Register a new user with role (user or admin)",
        "tags": [
          "Buyer Auth"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegisterUserRequest"
            },
            "required": true,
            "description": "User registration details"
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad request - User already exists or missing fields"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login into your account",
        "description": "Authenticate and login an existing user",
        "tags": [
          "Buyer Auth"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            },
            "required": true,
            "description": "User login credentials"
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Bad request - Invalid credentials"
          }
        }
      }
    },
    "/products/addProduct": {
      "post": {
        "summary": "Create a new Product",
        "description": "Add a new product to the database",
        "tags": [
          "Product"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "userId",
            "type": "string",
            "required": true,
            "description": "User ID of the product owner"
          },
          {
            "in": "formData",
            "name": "productName",
            "type": "string",
            "required": true,
            "description": "Product name"
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "Product description"
          },
          {
            "in": "formData",
            "name": "image",
            "type": "file",
            "description": "Product image"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "number",
            "required": true,
            "description": "Product price"
          },
          {
            "in": "formData",
            "name": "category",
            "type": "string",
            "enum": [
              "Food",
              "Fruits",
              "Alcohol",
              "Juice"
            ],
            "required": true,
            "description": "Product category"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Bad request - Validation error"
          }
        }
      }
    },
    "/products/productList": {
      "get": {
        "summary": "Get all products",
        "description": "Retrieve a list of all products",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval"
          },
          "404": {
            "description": "Products not found"
          }
        }
      }
    },
    "/products/productById/{id}": {
      "get": {
        "summary": "Get product by ID",
        "description": "Retrieve a product by its ID",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/updateProduct/{id}": {
      "put": {
        "summary": "Update product by ID",
        "description": "Update an existing product by its ID",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product to update"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "required": true,
            "description": "Updated product details"
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/products/deleteProduct/{id}": {
      "delete": {
        "summary": "Delete product by ID",
        "description": "Delete an existing product by its ID",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "definitions": {
    "RegisterUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        },
        "password": {
          "type": "string",
          "required": true
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin"
          ],
          "default": "user"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "required": true
        },
        "password": {
          "type": "string",
          "required": true
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User ID of the product owner"
        },
        "productName": {
          "type": "string",
          "required": true,
          "description": "Product name"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "Product description"
        },
        "price": {
          "type": "number",
          "required": true,
          "description": "Product price"
        },
        "category": {
          "type": "string",
          "enum": [
            "Food",
            "Fruits",
            "Alcohol",
            "Juice",
            "Soft drinks and Juice", 
            "Coffee", 
            "Wine"
          ],
          "required": true,
          "description": "Product category"
        },
        "image": {
          "type": "object",
          "properties": {
            "public_id": {
              "type": "string"
            },
            "asset_id": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "description": "Product image"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        }
      },
      "required": [
        "userId",
        "productName",
        "description",
        "price",
        "category"
      ]
    }
  }
}
