import { Axios } from 'axios';
import { CreateDedicatedVirtualAccount, DeactivateDedicatedAccountResponse, DedicatedAccountCreatedResponse, FetchBankProvidersResponse, FetchDedicatedVirtualAccountResponse, ListDedicatedVirtualAccountsQueryParams, ListDedicatedVirtualAccountsResponse, RemoveSplitDedicatedAccountResponse, SplitDedicatedAccountTransaction, SplitDedicatedAccountTransactionResponse } from './interface';
interface BadRequest {
    status: boolean;
    message: string;
}
export declare class DedicatedAccount {
    http: Axios;
    constructor(http: Axios);
    create(data: CreateDedicatedVirtualAccount): Promise<DedicatedAccountCreatedResponse | BadRequest>;
    list(queryParams: ListDedicatedVirtualAccountsQueryParams): Promise<ListDedicatedVirtualAccountsResponse | BadRequest>;
    fetch(dedicatedAccountId: string): Promise<FetchDedicatedVirtualAccountResponse | BadRequest>;
    deactivate(dedicatedAccountId: string): Promise<DeactivateDedicatedAccountResponse | BadRequest>;
    splitTransaction(data: SplitDedicatedAccountTransaction): Promise<SplitDedicatedAccountTransactionResponse | BadRequest>;
    removeSplit(accountNumber: string): Promise<RemoveSplitDedicatedAccountResponse | BadRequest>;
    providers(): Promise<FetchBankProvidersResponse | BadRequest>;
}
export {};
