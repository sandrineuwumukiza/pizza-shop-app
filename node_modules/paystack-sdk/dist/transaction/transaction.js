"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
/**
 * # Tansactions
 * The transaction API allows you create and manage
 * payments on your integration
 */
class Transaction {
    constructor(http) {
        this.http = http;
    }
    /**
     * Initialize a transaction
     * @param {InitializeTransaction} data **Body Param**
     */
    initialize(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.post('/transaction/initialize', JSON.stringify(data));
        });
    }
    verify(reference) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get(`/transaction/verify/${reference}`);
        });
    }
    list(queryParams) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get('/transaction', {
                params: Object.assign({}, queryParams),
            });
        });
    }
    fetch(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get(`/transaction/:${id}`);
        });
    }
    chargeAuthorization(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.post('/transaction/charge_authorization', JSON.stringify(data));
        });
    }
    checkAuthorization(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.post('/transaction/check_authorization', JSON.stringify(data));
        });
    }
    viewTimeline(id) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get(`/transaction/timeline/${id}`);
        });
    }
    total(queryParams) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get('/transaction/totals', {
                params: Object.assign({}, queryParams),
            });
        });
    }
    export(queryParams) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.get('/transaction/export', {
                params: Object.assign({}, queryParams),
            });
        });
    }
    partialDebit(data) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.http.post('/transaction/partial_debit', JSON.stringify(data));
        });
    }
}
exports.Transaction = Transaction;
